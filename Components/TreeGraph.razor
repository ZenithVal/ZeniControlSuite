<div class="hv-container">
  <div class="hv-wrapper">

    <!-- Key component -->
    <div class="hv-item">

      <div class="hv-item-parent">
        <p class="simple-card"> Parent </p>
      </div>

      <div class="hv-item-children">

        <div class="hv-item-child">
          <!-- Key component -->
          <div class="hv-item">

            <div class="hv-item-parent">
              <p class="simple-card"> Parent </p>
            </div>

            <div class="hv-item-children">

              <div class="hv-item-child">
                <p class="simple-card"> Child 1 </p>
              </div>

              <div class="hv-item-child">
                <p class="simple-card"> Child 2 </p>
              </div>

              <div class="hv-item-child">
                <p class="simple-card"> Child 2 </p>
              </div>

            </div>

          </div>
        </div>

        <div class="hv-item-child">
          <p class="simple-card"> Child 2 </p>
        </div>

        <div class="hv-item-child" @onclick="@(() => OnButtonClickHandler("Child 3"))">
          <p class="simple-card"> Child 3 </p>
        </div>

      </div>

    </div>

  </div>
</div>


@code {
    [Parameter]
    public List<string> Items { get; set; } = new List<string> { "Item 1", "Item 2", "Item 3" };
    
    [Parameter]
    public EventCallback<string> OnButtonClick { get; set; }
    
    
    private async Task OnButtonClickHandler(string item)
    {
        await OnButtonClick.InvokeAsync(item);
    }
    
}