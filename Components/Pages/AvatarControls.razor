@page "/AvatarControls"
@using Microsoft.AspNetCore.Authorization
@using ZeniControlSuite.Models.AvatarControls;
@using MudBlazor.Services
@using MudBlazor.Utilities
@attribute [Authorize(Roles = "Admin, Avatar")]

<PageTitle>Avatar Controls</PageTitle>

<h1>Avatar Controls</h1>
<MudDivider></MudDivider>

<br />
<br />

<MudGrid Spacing="3" Justify="Justify.FlexStart">
    @if (!AvatarsService.avatarsLoaded)
    {
        <MudItem>
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        </MudItem>
    }
    else
    {
        foreach (Control control in AvatarsService.selectedAvatar.Controls)
        {
            <MudItem>
                <MudPaper Style="@("width: 200px; height: 270px; padding: 8px")">
                    <MudText Typo="Typo.h6">@control.Name</MudText>

                    @if (control is ContTypeButton contBut)
                    {

                    }

                    else if (control is ContTypeToggle contTog)
                    {
                        if (contTog.Parameter.Value == contTog.ValueOff)
                        {
                            <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="@(() => ControlTogglePress(contTog))">+</MudButton>
                        }
                        else
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => ControlTogglePress(contTog))">-</MudButton>
                        }
                    }

                    else if (control is ContTypeRadial contRad)
                    {
                        <MudSlider Min="contRad.ValueMin" Max="contRad.ValueMax" Step="0.01f" Value="contRad.Parameter.Value" ValueChanged="@((float value) => ControlRadialChange(contRad, value))"/>
                    }

                    else if (control is ContTypeHSV contHSV)
					{
                        <MudText Typo="Typo.caption">HSV</MudText>

                        string hex = contHSV.targetColor.ToString(MudColorOutputFormats.Hex);
                        hex = hex + "99";
                        <MudPaper Style="@("position: absolute; width: 184px; height: 80px; padding: 8px; opacity: 1.0;background-color: " + hex)">


                            <MudColorPicker ShowToolbar="false" ShowAlpha="false" ShowModeSwitch="false"
                                            ThrottleInterval="100" DragEffect="@true" Elevation="8"
                                            Label="ColorPicker" PickerVariant="PickerVariant.Inline" ColorPickerMode="ColorPickerMode.HSL"
                                            Value="contHSV.targetColor" ValueChanged="@((MudBlazor.Utilities.MudColor color) => ControlHSVChange(contHSV, color))" />


                        </MudPaper>


					}

					else
					{
						<MudText Typo="Typo.caption">Unknown Type</MudText>
					}




                </MudPaper>
            </MudItem>
        }
    }
</MudGrid>